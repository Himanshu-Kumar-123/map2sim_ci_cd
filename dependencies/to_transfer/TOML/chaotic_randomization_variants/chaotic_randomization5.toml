# Example TOML demonstrating randomizing/setting driver model parameters from TOML.
# These parameters can be set on the ego and dynamic vehicles.
  # Example: driver_model.lane_offset - To drive off centered.
  # Example: driver_model.speed_limit_ratio - To model vehicles driving over/under the speed limit
  # Example: driver_model.aggressiveness - To model overall aggressiveness of vehicle. # Controls speed limit ratio, following distance etc
  # Example: ref_traffic_model_vehicle.driving_state - 'parked', 'reverse', 'drive'

# This toml to cover parameters (driving_state=drive,parked and reverse) only applied on non-ego.

[Assets]
root = "{/app/drivesim/defaultNucleusRoot}/"
sets = [
    "ego.toml",
    "dynamic_traffic_vehicles.toml",
]

# driving_state= "drive", "parked" and "reverse"

[Events.config]
enable_script = true
enable_periodic = true
periodic_start_frame = 0
collisions_enabled = true
enable_ego_teleportation = false

[[Events.setup]]
type='EgoRand'
func='setup'
pop_name='ego'
asset_file='ego.toml'
asset_sel_type='index'
asset_sel=[0]
driver_model.lane_offset=true
driver_model.speed_limit_ratio=3
ref_traffic_model_vehicle.driving_state="parked"

[[Events.setup]]
type= 'VehicleRandDyn'
func= 'setup'
pop_name='driving_traffic_vehicles'
asset_file='dynamic_traffic_vehicles.toml'
asset_sel_type='index'
asset_sel=[0]
 
[[Events.setup]]
type= 'VehicleRandDyn'
func= 'setup'
pop_name='parked_traffic_vehicles'
asset_file='dynamic_traffic_vehicles.toml'
asset_sel_type='index'
asset_sel=[0]
 
[[Events.setup]]
type= 'VehicleRandDyn'
func= 'setup'
pop_name='reverse_traffic_vehicles'
asset_file='dynamic_traffic_vehicles.toml'
asset_sel_type='index'
asset_sel=[0]

[[Events.setup]]
type='VehicleRandDyn'
func='randomize_position'
pop_name='driving_traffic_vehicles'
region_center='ahead_ego'
region_diameter=10
shuffle_order=true
offset=0
driver_model.lane_offset=-1
ref_traffic_model_vehicle.driving_state="drive"
driver_model.aggressiveness=2
 
[[Events.setup]]
type='VehicleRandDyn'
func='randomize_position'
pop_name='parked_traffic_vehicles'
region_center='ahead_ego'
region_diameter=30
shuffle_order=true
offset=0
driver_model.lane_offset=-2
ref_traffic_model_vehicle.driving_state="parked"
 
[[Events.setup]]
type='VehicleRandDyn'
func='randomize_position'
pop_name='reverse_traffic_vehicles'
region_center='ahead_ego'
region_diameter=20
shuffle_order=true
offset=0
driver_model.lane_offset=-1
ref_traffic_model_vehicle.driving_state="reverse"